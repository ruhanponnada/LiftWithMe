{"ast":null,"code":"var _jsxFileName = \"/Users/ruhanponnada/Documents/liftwithme-client/src/pages/Loginpage.jsx\",\n    _s = $RefreshSig$();\n\nimport { Button, chakra, FormControl, FormLabel, Heading, HStack, Input, Stack, useToast, Text, Box, Flex } from '@chakra-ui/react';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { FaGoogle } from 'react-icons/fa';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Card } from '../components/Card';\nimport DividerWithText from '../components/DividerWithText';\nimport { Layout } from '../components/Layout';\nimport { useAuth } from '../contexts/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Loginpage() {\n  _s();\n\n  const history = useHistory();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const toast = useToast();\n  const {\n    login\n  } = useAuth();\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      textAlign: \"center\",\n      my: 12,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      maxW: \"md\",\n      mx: \"auto\",\n      mt: 4,\n      children: [/*#__PURE__*/_jsxDEV(chakra.form, {\n        onSubmit: async e => {\n          e.preventDefault(); // your login logic here\n\n          if (!email || !password) {\n            toast({\n              description: \"Credentials not valid\",\n              status: 'error',\n              duration: 5000,\n              isClosable: true\n            });\n          }\n\n          setIsSubmitting(true);\n          login(email, password).then(response => console.log(response)).catch(error => {\n            console.log(error.message);\n            toast({\n              description: error.message,\n              status: 'error',\n              duration: 5000,\n              isClosable: true\n            });\n          }).finally(() => setIsSubmitting(false));\n        },\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          spacing: \"6\",\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            id: \"email\",\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Email address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              value: email,\n              onChange: e => setEmail(e.target.value),\n              name: \"email\",\n              type: \"email\",\n              autoComplete: \"email\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            id: \"password\",\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              value: email,\n              onChange: e => setPassword(e.target.value),\n              name: \"password\",\n              type: \"password\",\n              autoComplete: \"password\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            colorScheme: \"primary\",\n            size: \"lg\",\n            fontSize: \"md\",\n            children: \"Sign in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(HStack, {\n        justifyContent: \"space-between\",\n        my: 4,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"link\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/forgot-password\",\n            children: \"Forgot password?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"link\",\n          onClick: () => history.push('/register'),\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DividerWithText, {\n        my: 6,\n        children: \"OR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outline\",\n        isFullWidth: true,\n        colorScheme: \"red\",\n        leftIcon: /*#__PURE__*/_jsxDEV(FaGoogle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this),\n        onClick: () => alert('sign in with google'),\n        children: \"Sign in with Google\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Loginpage, \"n6djV8UqeD1df6NjrnFajyipPPs=\", false, function () {\n  return [useHistory, useToast, useAuth];\n});\n\n_c = Loginpage;\n\nvar _c;\n\n$RefreshReg$(_c, \"Loginpage\");","map":{"version":3,"sources":["/Users/ruhanponnada/Documents/liftwithme-client/src/pages/Loginpage.jsx"],"names":["Button","chakra","FormControl","FormLabel","Heading","HStack","Input","Stack","useToast","Text","Box","Flex","React","useEffect","useRef","useState","FaGoogle","Link","useHistory","Card","DividerWithText","Layout","useAuth","Loginpage","history","email","setEmail","password","setPassword","isSubmitting","setIsSubmitting","toast","login","e","preventDefault","description","status","duration","isClosable","then","response","console","log","catch","error","message","finally","target","value","push","alert"],"mappings":"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","sourcesContent":["import {\n  Button,\n  chakra,\n  FormControl,\n  FormLabel,\n  Heading,\n  HStack,\n  Input,\n  Stack,\n  useToast,\n  Text,\n  Box,\n  Flex,\n} from '@chakra-ui/react'\nimport React, { useEffect, useRef, useState } from 'react'\nimport { FaGoogle } from 'react-icons/fa'\nimport { Link, useHistory } from 'react-router-dom'\nimport { Card } from '../components/Card'\nimport DividerWithText from '../components/DividerWithText'\nimport { Layout } from '../components/Layout'\nimport { useAuth } from '../contexts/AuthContext'\n\nexport default function Loginpage() {\n  const history = useHistory()\n  const [email, setEmail]= useState('')\n  const [password, setPassword]= useState('')\n  const [isSubmitting, setIsSubmitting] = useState(false)\n  const toast = useToast()\n  const {login}= useAuth()\n\n  return (\n    <Layout>\n      <Heading textAlign='center' my={12}>\n        Login\n      </Heading>\n      <Card maxW='md' mx='auto' mt={4}>\n        <chakra.form\n          onSubmit={async e => {\n            e.preventDefault()\n            // your login logic here\n            if (!email || !password){\n              toast({\n                description:\"Credentials not valid\",\n                status: 'error',\n                duration: 5000,\n                isClosable: true\n              })\n            }\n            setIsSubmitting(true)\n            login(email, password)\n              .then((response) => console.log(response))\n              .catch((error) => {\n                console.log(error.message)\n                toast({\n                  description: error.message,\n                  status: 'error',\n                  duration: 5000,\n                  isClosable: true\n                })\n              })\n              .finally(() => setIsSubmitting(false))\n          }}\n        >\n          <Stack spacing='6'>\n            <FormControl id='email'>\n              <FormLabel>Email address</FormLabel>\n              <Input \n                value={email} \n                onChange={e => setEmail(e.target.value)}\n                name='email' \n                type='email' \n                autoComplete='email' \n                required />\n            </FormControl>\n            <FormControl id='password'>\n              <FormLabel>Password</FormLabel>\n              <Input\n              value={email} \n                onChange={e => setPassword(e.target.value)}\n                name='password'\n                type='password'\n                autoComplete='password'\n                required\n              />\n            </FormControl>\n            {/* <PasswordField /> */}\n            <Button type='submit' colorScheme='primary' size='lg' fontSize='md'>\n              Sign in\n            </Button>\n          </Stack>\n        </chakra.form>\n        <HStack justifyContent='space-between' my={4}>\n          <Button variant='link'>\n            <Link to='/forgot-password'>Forgot password?</Link>\n          </Button>\n          <Button variant='link' onClick={() => history.push('/register')}>\n            Register\n          </Button>\n        </HStack>\n        <DividerWithText my={6}>OR</DividerWithText>\n        <Button\n          variant='outline'\n          isFullWidth\n          colorScheme='red'\n          leftIcon={<FaGoogle />}\n          onClick={() => alert('sign in with google')}\n        >\n          Sign in with Google\n        </Button>\n      </Card>\n    </Layout>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}