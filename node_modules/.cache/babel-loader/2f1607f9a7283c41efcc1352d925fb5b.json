{"ast":null,"code":"var _jsxFileName = \"/Users/ruhanponnada/Documents/liftwithme-client/src/pages/Loginpage.jsx\",\n    _s = $RefreshSig$();\n\nimport { Button, chakra, FormControl, FormLabel, Heading, HStack, Input, Stack, useToast, Text, Box, Flex } from '@chakra-ui/react';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { FaGoogle } from 'react-icons/fa';\nimport { useLocation } from 'react-router-dom';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Card } from '../components/Card';\nimport DividerWithText from '../components/DividerWithText';\nimport { Layout } from '../components/Layout';\nimport { useAuth } from '../contexts/AuthContext';\nimport useMounted from '../hooks/useMounted';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Loginpage() {\n  _s();\n\n  const history = useHistory();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const toast = useToast();\n  const {\n    login,\n    signInWithGoogle\n  } = useAuth();\n  const mounted = useMounted();\n  const location = useLocation();\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      textAlign: \"center\",\n      my: 12,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      maxW: \"md\",\n      mx: \"auto\",\n      mt: 4,\n      children: [/*#__PURE__*/_jsxDEV(chakra.form, {\n        onSubmit: async e => {\n          e.preventDefault(); // your login logic here\n\n          if (!email || !password) {\n            toast({\n              description: \"Credentials not valid\",\n              status: 'error',\n              duration: 5000,\n              isClosable: true\n            });\n          }\n\n          setIsSubmitting(true);\n          login(email, password).then(response => {\n            var _location$state$from, _location$state;\n\n            console.log(response);\n            history.push((_location$state$from = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.from) !== null && _location$state$from !== void 0 ? _location$state$from : '/profile');\n          }).catch(error => {\n            console.log(error.message);\n            toast({\n              description: error.message,\n              status: 'error',\n              duration: 5000,\n              isClosable: true\n            });\n          }).finally(() => mounted.current && setIsSubmitting(false));\n        },\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          spacing: \"6\",\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            id: \"email\",\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Email address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              value: email,\n              onChange: e => setEmail(e.target.value),\n              name: \"email\",\n              type: \"email\",\n              autoComplete: \"email\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            id: \"password\",\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              value: password,\n              onChange: e => setPassword(e.target.value),\n              name: \"password\",\n              type: \"password\",\n              autoComplete: \"password\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            isLoading: isSubmitting,\n            type: \"submit\",\n            colorScheme: \"primary\",\n            size: \"lg\",\n            fontSize: \"md\",\n            children: \"Sign in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(HStack, {\n        justifyContent: \"space-between\",\n        my: 4,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"link\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/forgot-password\",\n            children: \"Forgot password?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"link\",\n          onClick: () => history.push('/register'),\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DividerWithText, {\n        my: 6,\n        children: \"OR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outline\",\n        isFullWidth: true,\n        colorScheme: \"red\",\n        leftIcon: /*#__PURE__*/_jsxDEV(FaGoogle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this),\n        onClick: () => {\n          signInWithGoogle().then(response => {\n            console.log(response);\n            history.push('/profile');\n          }).catch(error => {\n            console.log(error.message);\n          });\n        },\n        children: \"Sign in with Google\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Loginpage, \"/XG0tkhtg/rxpg4IP2Ub4eCHUsI=\", false, function () {\n  return [useHistory, useToast, useAuth, useMounted, useLocation];\n});\n\n_c = Loginpage;\n\nvar _c;\n\n$RefreshReg$(_c, \"Loginpage\");","map":{"version":3,"sources":["/Users/ruhanponnada/Documents/liftwithme-client/src/pages/Loginpage.jsx"],"names":["Button","chakra","FormControl","FormLabel","Heading","HStack","Input","Stack","useToast","Text","Box","Flex","React","useEffect","useRef","useState","FaGoogle","useLocation","Link","useHistory","Card","DividerWithText","Layout","useAuth","useMounted","Loginpage","history","email","setEmail","password","setPassword","isSubmitting","setIsSubmitting","toast","login","signInWithGoogle","mounted","location","e","preventDefault","description","status","duration","isClosable","then","response","console","log","push","state","from","catch","error","message","finally","current","target","value"],"mappings":"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","sourcesContent":["import {\n  Button,\n  chakra,\n  FormControl,\n  FormLabel,\n  Heading,\n  HStack,\n  Input,\n  Stack,\n  useToast,\n  Text,\n  Box,\n  Flex,\n} from '@chakra-ui/react'\nimport React, { useEffect, useRef, useState } from 'react'\nimport { FaGoogle } from 'react-icons/fa'\nimport { useLocation } from 'react-router-dom'\nimport { Link, useHistory } from 'react-router-dom'\nimport { Card } from '../components/Card'\nimport DividerWithText from '../components/DividerWithText'\nimport { Layout } from '../components/Layout'\nimport { useAuth } from '../contexts/AuthContext'\nimport useMounted from '../hooks/useMounted'\n\nexport default function Loginpage() {\n  const history = useHistory()\n  const [email, setEmail]= useState('')\n  const [password, setPassword]= useState('')\n  const [isSubmitting, setIsSubmitting] = useState(false)\n  const toast = useToast()\n  const {login, signInWithGoogle}= useAuth()\n  const mounted = useMounted()\n  const location = useLocation()\n  \n\n  return (\n    <Layout>\n      <Heading textAlign='center' my={12}>\n        Login\n      </Heading>\n      <Card maxW='md' mx='auto' mt={4}>\n        <chakra.form\n          onSubmit={async e => {\n            e.preventDefault()\n            // your login logic here\n            if (!email || !password){\n              toast({\n                description:\"Credentials not valid\",\n                status: 'error',\n                duration: 5000,\n                isClosable: true\n              })\n            }\n            setIsSubmitting(true)\n            login(email, password)\n              .then((response) => {\n                console.log(response)\n                history.push(location.state?.from ?? '/profile')\n              })\n              .catch((error) => {\n                console.log(error.message)\n                toast({\n                  description: error.message,\n                  status: 'error',\n                  duration: 5000,\n                  isClosable: true\n                })\n              })\n              .finally(() => mounted.current && setIsSubmitting(false))\n          }}\n        >\n          <Stack spacing='6'>\n            <FormControl id='email'>\n              <FormLabel>Email address</FormLabel>\n              <Input \n                value={email} \n                onChange={e => setEmail(e.target.value)}\n                name='email' \n                type='email' \n                autoComplete='email' \n                required />\n            </FormControl>\n            <FormControl id='password'>\n              <FormLabel>Password</FormLabel>\n              <Input\n                value={password} \n                onChange={e => setPassword(e.target.value)}\n                name='password'\n                type='password'\n                autoComplete='password'\n                required\n              />\n            </FormControl>\n            {/* <PasswordField /> */}\n            <Button \n              isLoading={isSubmitting} \n              type='submit' \n              colorScheme='primary' \n              size='lg' \n              fontSize='md'\n            >\n              Sign in\n            </Button>\n          </Stack>\n        </chakra.form>\n        <HStack justifyContent='space-between' my={4}>\n          <Button variant='link'>\n            <Link to='/forgot-password'>Forgot password?</Link>\n          </Button>\n          <Button variant='link' onClick={() => history.push('/register')}>\n            Register\n          </Button>\n        </HStack>\n        <DividerWithText my={6}>OR</DividerWithText>\n        <Button\n          variant='outline'\n          isFullWidth\n          colorScheme='red'\n          leftIcon={<FaGoogle />}\n          onClick={() => {\n            signInWithGoogle()\n              .then((response) => {\n                console.log(response)\n                history.push('/profile')\n              })\n              .catch((error) => {console.log(error.message)})\n            }\n          }\n        >\n          Sign in with Google\n        </Button>\n      </Card>\n    </Layout>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}