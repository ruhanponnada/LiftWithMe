{"ast":null,"code":"var _jsxFileName = \"/Users/ruhanponnada/Documents/liftwithme-client/src/pages/Registerpage.jsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Center, chakra, FormControl, FormLabel, Heading, Input, Stack, useToast } from '@chakra-ui/react';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { FaGoogle } from 'react-icons/fa';\nimport { useHistory } from 'react-router-dom';\nimport { Card } from '../components/Card';\nimport DividerWithText from '../components/DividerWithText';\nimport { Layout } from '../components/Layout';\nimport { useAuth } from '../contexts/AuthContext';\nimport useMounted from '../hooks/useMounted';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Registerpage() {\n  _s();\n\n  const history = useHistory();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const toast = useToast();\n  const {\n    register,\n    signInWithGoogle\n  } = useAuth();\n  const mounted = useMounted();\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      textAlign: \"center\",\n      my: 12,\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      maxW: \"md\",\n      mx: \"auto\",\n      mt: 4,\n      children: [/*#__PURE__*/_jsxDEV(chakra.form, {\n        onSubmit: async e => {\n          e.preventDefault(); // your register logic here\n          //console.log(email, password)\n\n          if (!email || !password) {\n            toast({\n              description: \"Credentials not valid\",\n              status: 'error',\n              duration: 5000,\n              isClosable: true\n            });\n          }\n\n          setIsSubmitting(true);\n          register(email, password).then(response => console.log(response)).catch(error => {\n            console.log(error.message);\n            toast({\n              description: error.message,\n              status: 'error',\n              duration: 5000,\n              isClosable: true\n            });\n          }).finally(() => mounted.current && setIsSubmitting(false));\n        },\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          spacing: \"6\",\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            id: \"email\",\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Email address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              value: email,\n              onChange: e => setEmail(e.target.value),\n              name: \"email\",\n              type: \"email\",\n              autoComplete: \"email\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            id: \"password\",\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              value: password,\n              onChange: e => setPassword(e.target.value),\n              name: \"password\",\n              type: \"password\",\n              autoComplete: \"password\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            isLoading: isSubmitting,\n            type: \"submit\",\n            colorScheme: \"primary\",\n            size: \"lg\",\n            fontSize: \"md\",\n            children: \"Sign up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Center, {\n        my: 4,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"link\",\n          onClick: () => signInWithGoogle().then(user => console.log(user)).catch(error => console.log(error)),\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DividerWithText, {\n        my: 6,\n        children: \"OR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outline\",\n        isFullWidth: true,\n        colorScheme: \"red\",\n        leftIcon: /*#__PURE__*/_jsxDEV(FaGoogle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this),\n        onClick: () => alert('sign in with google'),\n        children: \"Sign in with Google\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Registerpage, \"3qfyBan3fcfhIsbyRX71vRdNmlk=\", false, function () {\n  return [useHistory, useToast, useAuth, useMounted];\n});\n\n_c = Registerpage;\n\nvar _c;\n\n$RefreshReg$(_c, \"Registerpage\");","map":{"version":3,"sources":["/Users/ruhanponnada/Documents/liftwithme-client/src/pages/Registerpage.jsx"],"names":["Button","Center","chakra","FormControl","FormLabel","Heading","Input","Stack","useToast","React","useEffect","useRef","useState","FaGoogle","useHistory","Card","DividerWithText","Layout","useAuth","useMounted","Registerpage","history","email","setEmail","password","setPassword","isSubmitting","setIsSubmitting","toast","register","signInWithGoogle","mounted","e","preventDefault","description","status","duration","isClosable","then","response","console","log","catch","error","message","finally","current","target","value","user","alert"],"mappings":"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","sourcesContent":["import {\n  Button,\n  Center,\n  chakra,\n  FormControl,\n  FormLabel,\n  Heading,\n  Input,\n  Stack,\n  useToast,\n} from '@chakra-ui/react'\nimport React, { useEffect, useRef, useState } from 'react'\nimport { FaGoogle } from 'react-icons/fa'\nimport { useHistory } from 'react-router-dom'\nimport { Card } from '../components/Card'\nimport DividerWithText from '../components/DividerWithText'\nimport { Layout } from '../components/Layout'\nimport { useAuth } from '../contexts/AuthContext'\nimport useMounted from '../hooks/useMounted'\n\nexport default function Registerpage() {\n  const history = useHistory()\n  const [email, setEmail]= useState('')\n  const [password, setPassword]= useState('')\n  const [isSubmitting, setIsSubmitting] = useState(false)\n  const toast = useToast()\n  const {register, signInWithGoogle}= useAuth()\n  const mounted = useMounted()\n\n  return (\n    <Layout>\n      <Heading textAlign='center' my={12}>\n        Register\n      </Heading>\n      <Card maxW='md' mx='auto' mt={4}>\n        <chakra.form\n          onSubmit={async e => {\n            e.preventDefault()\n            // your register logic here\n            //console.log(email, password)\n            if (!email || !password){\n              toast({\n                description:\"Credentials not valid\",\n                status: 'error',\n                duration: 5000,\n                isClosable: true\n              })\n            }\n            setIsSubmitting(true)\n            register(email, password)\n              .then((response) => console.log(response))\n              .catch((error) => {\n                console.log(error.message)\n                toast({\n                  description: error.message,\n                  status: 'error',\n                  duration: 5000,\n                  isClosable: true\n                })\n              })\n              .finally(() => mounted.current && setIsSubmitting(false))\n          }}\n        >\n          <Stack spacing='6'>\n            <FormControl id='email'>\n              <FormLabel>Email address</FormLabel>\n              <Input \n                value={email} \n                onChange={e => setEmail(e.target.value)}\n                name='email' \n                type='email' \n                autoComplete='email' \n                required />\n            </FormControl>\n            <FormControl id='password'>\n              <FormLabel>Password</FormLabel>\n              <Input\n                value = {password}\n                onChange = {e => setPassword(e.target.value)}\n                name='password'\n                type='password'\n                autoComplete='password'\n                required\n              />\n            </FormControl>\n            <Button \n              isLoading={isSubmitting} \n              type='submit' \n              colorScheme='primary' \n              size='lg' \n              fontSize='md'>\n              Sign up\n            </Button>\n          </Stack>\n        </chakra.form>\n        <Center my={4}>\n          <Button \n            variant='link' \n            onClick={() => \n              signInWithGoogle()\n                .then(user => console.log(user))\n                .catch(error => console.log(error))\n            }\n          >\n            Login\n          </Button>\n        </Center>\n        <DividerWithText my={6}>OR</DividerWithText>\n        <Button\n          variant='outline'\n          isFullWidth\n          colorScheme='red'\n          leftIcon={<FaGoogle />}\n          onClick={() => alert('sign in with google')}\n        >\n          Sign in with Google\n        </Button>\n      </Card>\n    </Layout>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}