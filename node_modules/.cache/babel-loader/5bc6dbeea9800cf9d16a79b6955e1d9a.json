{"ast":null,"code":"var _jsxFileName = \"/Users/ruhanponnada/Documents/liftwithme-client/src/contexts/AuthContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useEffect, useState } from \"react\";\nimport { auth } from '../utils/init';\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword, onAuthStateChanged, signOut, GoogleAuthProvider, signInWithPopup, sendPasswordResetEmail, confirmPasswordReset } from 'firebase/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext({\n  currentUser: null,\n  register: () => Promise,\n  login: () => Promise,\n  logout: () => Promise,\n  signInWithGoogle: () => Promise,\n  forgotPassword: () => Promise,\n  resetPassword: () => Promise\n});\nexport const useAuth = () => {\n  _s();\n\n  return useContext(AuthContext);\n};\n\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport default function AuthContextProvider({\n  children\n}) {\n  _s2();\n\n  const [currentUser, setCurrentUser] = useState(null);\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, user => {\n      setCurrentUser(user);\n    });\n    return () => {\n      unsubscribe();\n    };\n  }, []);\n\n  function register(email, password) {\n    return createUserWithEmailAndPassword(auth, email, password);\n  }\n\n  function login(email, password) {\n    return signInWithEmailAndPassword(auth, email, password);\n  }\n\n  function logout() {\n    return signOut(auth);\n  }\n\n  function signInWithGoogle() {\n    const provider = new GoogleAuthProvider();\n    return signInWithPopup(auth, provider);\n  }\n\n  function forgotPassword(email) {\n    return sendPasswordResetEmail(auth, email, {\n      url: 'http://localhost:3000/login'\n    });\n  }\n\n  function resetPassword(oobCode, newPassword) {\n    return confirmPasswordReset(auth, oobCode, newPassword);\n  }\n\n  const value = {\n    currentUser,\n    register,\n    login,\n    logout,\n    signInWithGoogle,\n    forgotPassword,\n    resetPassword\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 12\n  }, this);\n}\n\n_s2(AuthContextProvider, \"Y5F2pQQk2LZA5WRO2+bvRm5iRuo=\");\n\n_c = AuthContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["/Users/ruhanponnada/Documents/liftwithme-client/src/contexts/AuthContext.js"],"names":["createContext","useContext","useEffect","useState","auth","createUserWithEmailAndPassword","signInWithEmailAndPassword","onAuthStateChanged","signOut","GoogleAuthProvider","signInWithPopup","sendPasswordResetEmail","confirmPasswordReset","AuthContext","currentUser","register","Promise","login","logout","signInWithGoogle","forgotPassword","resetPassword","useAuth","AuthContextProvider","children","setCurrentUser","unsubscribe","user","email","password","provider","url","oobCode","newPassword","value"],"mappings":";;;;AACA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,SAApC,EAA+CC,QAA/C,QAA+D,OAA/D;AACA,SAAQC,IAAR,QAAmB,eAAnB;AACA,SACIC,8BADJ,EAEIC,0BAFJ,EAGIC,kBAHJ,EAIIC,OAJJ,EAKIC,kBALJ,EAMIC,eANJ,EAOIC,sBAPJ,EAQIC,oBARJ,QASO,eATP;;AAYA,MAAMC,WAAW,gBAAGb,aAAa,CAAC;AAC9Bc,EAAAA,WAAW,EAAE,IADiB;AAE9BC,EAAAA,QAAQ,EAAE,MAAMC,OAFc;AAG9BC,EAAAA,KAAK,EAAE,MAAMD,OAHiB;AAI9BE,EAAAA,MAAM,EAAE,MAAMF,OAJgB;AAK9BG,EAAAA,gBAAgB,EAAE,MAAMH,OALM;AAM9BI,EAAAA,cAAc,EAAE,MAAMJ,OANQ;AAO9BK,EAAAA,aAAa,EAAE,MAAML;AAPS,CAAD,CAAjC;AASA,OAAO,MAAMM,OAAO,GAAG;AAAA;;AAAA,SAAMrB,UAAU,CAACY,WAAD,CAAhB;AAAA,CAAhB;;GAAMS,O;;AACb,eAAe,SAASC,mBAAT,CAA6B;AAACC,EAAAA;AAAD,CAA7B,EAAwC;AAAA;;AACnD,QAAM,CAACV,WAAD,EAAcW,cAAd,IAAgCtB,QAAQ,CAAC,IAAD,CAA9C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMwB,WAAW,GAAGnB,kBAAkB,CAACH,IAAD,EAAOuB,IAAI,IAAI;AACjDF,MAAAA,cAAc,CAACE,IAAD,CAAd;AACH,KAFqC,CAAtC;AAGA,WAAO,MAAM;AACTD,MAAAA,WAAW;AACd,KAFD;AAGH,GAPQ,EAON,EAPM,CAAT;;AASA,WAASX,QAAT,CAAkBa,KAAlB,EAAyBC,QAAzB,EAAkC;AAC9B,WAAOxB,8BAA8B,CAACD,IAAD,EAAOwB,KAAP,EAAcC,QAAd,CAArC;AACH;;AAED,WAASZ,KAAT,CAAeW,KAAf,EAAsBC,QAAtB,EAAgC;AAC5B,WAAOvB,0BAA0B,CAACF,IAAD,EAAOwB,KAAP,EAAcC,QAAd,CAAjC;AACH;;AAED,WAASX,MAAT,GAAiB;AACb,WAAOV,OAAO,CAACJ,IAAD,CAAd;AACH;;AAED,WAASe,gBAAT,GAA4B;AACxB,UAAMW,QAAQ,GAAG,IAAIrB,kBAAJ,EAAjB;AACA,WAAOC,eAAe,CAACN,IAAD,EAAO0B,QAAP,CAAtB;AACH;;AAED,WAASV,cAAT,CAAwBQ,KAAxB,EAA+B;AAC3B,WAAOjB,sBAAsB,CAACP,IAAD,EAAOwB,KAAP,EAAc;AACvCG,MAAAA,GAAG,EAAE;AADkC,KAAd,CAA7B;AAGH;;AAED,WAASV,aAAT,CAAuBW,OAAvB,EAAgCC,WAAhC,EAA4C;AACxC,WAAOrB,oBAAoB,CAACR,IAAD,EAAO4B,OAAP,EAAgBC,WAAhB,CAA3B;AACH;;AAED,QAAMC,KAAK,GAAG;AACVpB,IAAAA,WADU;AAEVC,IAAAA,QAFU;AAGVE,IAAAA,KAHU;AAIVC,IAAAA,MAJU;AAKVC,IAAAA,gBALU;AAMVC,IAAAA,cANU;AAOVC,IAAAA;AAPU,GAAd;AASA,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAIa,KAA/B;AAAA,cAAuCV;AAAvC;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;IAjDuBD,mB;;KAAAA,mB","sourcesContent":["\nimport { createContext, useContext, useEffect, useState } from \"react\";\nimport {auth} from '../utils/init';\nimport {\n    createUserWithEmailAndPassword, \n    signInWithEmailAndPassword, \n    onAuthStateChanged,\n    signOut,\n    GoogleAuthProvider,\n    signInWithPopup,\n    sendPasswordResetEmail,\n    confirmPasswordReset\n} from 'firebase/auth';\n\n\nconst AuthContext = createContext({\n    currentUser: null,\n    register: () => Promise,\n    login: () => Promise,\n    logout: () => Promise,\n    signInWithGoogle: () => Promise,\n    forgotPassword: () => Promise,\n    resetPassword: () => Promise\n})\nexport const useAuth = () => useContext(AuthContext)\nexport default function AuthContextProvider({children}){\n    const [currentUser, setCurrentUser] = useState(null)\n\n    useEffect(() => {\n        const unsubscribe = onAuthStateChanged(auth, user => {\n            setCurrentUser(user)\n        })\n        return () => {\n            unsubscribe()\n        }\n    }, [])\n\n    function register(email, password){\n        return createUserWithEmailAndPassword(auth, email, password)\n    }\n\n    function login(email, password) {\n        return signInWithEmailAndPassword(auth, email, password)\n    }\n\n    function logout(){\n        return signOut(auth)\n    }\n\n    function signInWithGoogle() {\n        const provider = new GoogleAuthProvider()\n        return signInWithPopup(auth, provider)\n    }\n\n    function forgotPassword(email) {\n        return sendPasswordResetEmail(auth, email, {\n            url: 'http://localhost:3000/login',\n        })\n    }\n\n    function resetPassword(oobCode, newPassword){\n        return confirmPasswordReset(auth, oobCode, newPassword)\n    }\n\n    const value = {\n        currentUser,\n        register,\n        login,\n        logout,\n        signInWithGoogle,\n        forgotPassword,\n        resetPassword\n    }\n    return <AuthContext.Provider value = {value}>{children}</AuthContext.Provider>\n}\n"]},"metadata":{},"sourceType":"module"}