{"ast":null,"code":"var _jsxFileName = \"/Users/ruhanponnada/Documents/liftwithme-client/src/components/AppRouter.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport { Redirect } from 'react-router-dom/cjs/react-router-dom.min';\nimport { useAuth } from '../contexts/AuthContext';\nimport ForgotPasswordPage from '../pages/ForgotPasswordPage';\nimport Homepage from '../pages/Homepage';\nimport Loginpage from '../pages/Loginpage';\nimport NotfoundPage from '../pages/NotfoundPage';\nimport Profilepage from '../pages/Profilepage';\nimport ProtectedPage from '../pages/ProtectedPage';\nimport Registerpage from '../pages/Registerpage';\nimport ResetPasswordPage from '../pages/ResetPasswordPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function AppRouter(props) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          component: Homepage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/login\",\n          component: Loginpage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/register\",\n          component: Registerpage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          exact: true,\n          path: \"/profile\",\n          component: Profilepage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          exact: true,\n          path: \"/protected-page\",\n          component: ProtectedPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/forgot-password\",\n          component: ForgotPasswordPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/reset-password\",\n          component: ResetPasswordPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"*\",\n          component: NotfoundPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c = AppRouter;\n\nfunction ProtectedRoute(props) {\n  _s();\n\n  const {\n    currentUser\n  } = useAuth();\n  const {\n    path\n  } = props;\n  const location = useLocation();\n\n  if (path == '/login') {\n    var _location$state$from, _location$state;\n\n    return currentUser ? /*#__PURE__*/_jsxDEV(Redirect, {\n      to: (_location$state$from = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.from) !== null && _location$state$from !== void 0 ? _location$state$from : '/profile'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(Route, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  }\n\n  return currentUser ? /*#__PURE__*/_jsxDEV(Route, { ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n    to: {\n      pathname: '/login',\n      state: {\n        from: path\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProtectedRoute, \"fX6iULWyCPF4DEbMoFyknDHnLRg=\", false, function () {\n  return [useAuth, useLocation];\n});\n\n_c2 = ProtectedRoute;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AppRouter\");\n$RefreshReg$(_c2, \"ProtectedRoute\");","map":{"version":3,"sources":["/Users/ruhanponnada/Documents/liftwithme-client/src/components/AppRouter.jsx"],"names":["React","BrowserRouter","Router","Route","Switch","useLocation","Redirect","useAuth","ForgotPasswordPage","Homepage","Loginpage","NotfoundPage","Profilepage","ProtectedPage","Registerpage","ResetPasswordPage","AppRouter","props","ProtectedRoute","currentUser","path","location","state","from","pathname"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport { useLocation } from 'react-router-dom'\nimport { Redirect } from 'react-router-dom/cjs/react-router-dom.min'\nimport { useAuth } from '../contexts/AuthContext'\nimport ForgotPasswordPage from '../pages/ForgotPasswordPage'\nimport Homepage from '../pages/Homepage'\nimport Loginpage from '../pages/Loginpage'\nimport NotfoundPage from '../pages/NotfoundPage'\nimport Profilepage from '../pages/Profilepage'\nimport ProtectedPage from '../pages/ProtectedPage'\nimport Registerpage from '../pages/Registerpage'\nimport ResetPasswordPage from '../pages/ResetPasswordPage'\n\nexport default function AppRouter(props) {\n  return (\n    <>\n      <Router>\n        <Switch>\n          <Route exact path='/' component={Homepage} />\n          <Route exact path='/login' component={Loginpage} />\n          <Route exact path='/register' component={Registerpage} />\n          <ProtectedRoute exact path='/profile' component={Profilepage} />\n          <ProtectedRoute exact path='/protected-page' component={ProtectedPage} />\n          <Route exact path='/forgot-password' component={ForgotPasswordPage} />\n          <Route exact path='/reset-password' component={ResetPasswordPage} />\n          <Route exact path='*' component={NotfoundPage} />\n        </Switch>\n      </Router>\n    </>\n  )\n}\n\nfunction ProtectedRoute(props){\n  const {currentUser} = useAuth()\n  const {path} = props\n  const location = useLocation()\n\n  if (path == '/login'){\n    return currentUser ? (\n      <Redirect to={location.state?.from ?? '/profile'} />\n    ) : ( \n      <Route {...props} />\n    )\n  }\n\n  return currentUser ? (\n    <Route {...props} /> \n  ): ( \n    <Redirect \n      to={{\n        pathname: '/login',\n        state: {from: path},\n      }}\n    />\n  )\n}"]},"metadata":{},"sourceType":"module"}