{"ast":null,"code":"var _jsxFileName = \"/Users/ruhanponnada/Documents/liftwithme-client/src/contexts/AuthContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useEffect, useState } from \"react\";\nimport { auth } from '../utils/init';\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword, onAuthStateChanged, signOut, GoogleAuthProvider, signInWithPopup } from 'firebase/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext({\n  currentUser: null,\n  register: () => Promise,\n  login: () => Promise,\n  logout: () => Promise\n});\nexport const useAuth = () => {\n  _s();\n\n  return useContext(AuthContext);\n};\n\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport default function AuthContextProvider({\n  children\n}) {\n  _s2();\n\n  const [currentUser, setCurrentUser] = useState(null);\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, user => {\n      setCurrentUser(user);\n    });\n    return () => {\n      unsubscribe();\n    };\n  }, []);\n\n  function register(email, password) {\n    return createUserWithEmailAndPassword(auth, email, password);\n  }\n\n  function login(email, password) {\n    return signInWithEmailAndPassword(auth, email, password);\n  }\n\n  function logout() {\n    return signOut(auth);\n  }\n\n  function signInWithGoogle() {\n    const provider = new GoogleAuthProvider();\n    return signInWithPopup(auth, provider);\n  }\n\n  const value = {\n    currentUser,\n    register,\n    login,\n    logout,\n    signInWithGoogle\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 12\n  }, this);\n}\n\n_s2(AuthContextProvider, \"Y5F2pQQk2LZA5WRO2+bvRm5iRuo=\");\n\n_c = AuthContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["/Users/ruhanponnada/Documents/liftwithme-client/src/contexts/AuthContext.js"],"names":["createContext","useContext","useEffect","useState","auth","createUserWithEmailAndPassword","signInWithEmailAndPassword","onAuthStateChanged","signOut","GoogleAuthProvider","signInWithPopup","AuthContext","currentUser","register","Promise","login","logout","useAuth","AuthContextProvider","children","setCurrentUser","unsubscribe","user","email","password","signInWithGoogle","provider","value"],"mappings":";;;;AACA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,SAApC,EAA+CC,QAA/C,QAA+D,OAA/D;AACA,SAAQC,IAAR,QAAmB,eAAnB;AACA,SACIC,8BADJ,EAEIC,0BAFJ,EAGIC,kBAHJ,EAIIC,OAJJ,EAKIC,kBALJ,EAMIC,eANJ,QAOO,eAPP;;AAUA,MAAMC,WAAW,gBAAGX,aAAa,CAAC;AAC9BY,EAAAA,WAAW,EAAE,IADiB;AAE9BC,EAAAA,QAAQ,EAAE,MAAMC,OAFc;AAG9BC,EAAAA,KAAK,EAAE,MAAMD,OAHiB;AAI9BE,EAAAA,MAAM,EAAE,MAAMF;AAJgB,CAAD,CAAjC;AAMA,OAAO,MAAMG,OAAO,GAAG;AAAA;;AAAA,SAAMhB,UAAU,CAACU,WAAD,CAAhB;AAAA,CAAhB;;GAAMM,O;;AACb,eAAe,SAASC,mBAAT,CAA6B;AAACC,EAAAA;AAAD,CAA7B,EAAwC;AAAA;;AACnD,QAAM,CAACP,WAAD,EAAcQ,cAAd,IAAgCjB,QAAQ,CAAC,IAAD,CAA9C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMmB,WAAW,GAAGd,kBAAkB,CAACH,IAAD,EAAOkB,IAAI,IAAI;AACjDF,MAAAA,cAAc,CAACE,IAAD,CAAd;AACH,KAFqC,CAAtC;AAGA,WAAO,MAAM;AACTD,MAAAA,WAAW;AACd,KAFD;AAGH,GAPQ,EAON,EAPM,CAAT;;AASA,WAASR,QAAT,CAAkBU,KAAlB,EAAyBC,QAAzB,EAAkC;AAC9B,WAAOnB,8BAA8B,CAACD,IAAD,EAAOmB,KAAP,EAAcC,QAAd,CAArC;AACH;;AAED,WAAST,KAAT,CAAeQ,KAAf,EAAsBC,QAAtB,EAAgC;AAC5B,WAAOlB,0BAA0B,CAACF,IAAD,EAAOmB,KAAP,EAAcC,QAAd,CAAjC;AACH;;AAED,WAASR,MAAT,GAAiB;AACb,WAAOR,OAAO,CAACJ,IAAD,CAAd;AACH;;AAED,WAASqB,gBAAT,GAA4B;AACxB,UAAMC,QAAQ,GAAG,IAAIjB,kBAAJ,EAAjB;AACA,WAAOC,eAAe,CAACN,IAAD,EAAOsB,QAAP,CAAtB;AACH;;AACD,QAAMC,KAAK,GAAG;AACVf,IAAAA,WADU;AAEVC,IAAAA,QAFU;AAGVE,IAAAA,KAHU;AAIVC,IAAAA,MAJU;AAKVS,IAAAA;AALU,GAAd;AAOA,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAIE,KAA/B;AAAA,cAAuCR;AAAvC;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;IApCuBD,mB;;KAAAA,mB","sourcesContent":["\nimport { createContext, useContext, useEffect, useState } from \"react\";\nimport {auth} from '../utils/init';\nimport {\n    createUserWithEmailAndPassword, \n    signInWithEmailAndPassword, \n    onAuthStateChanged,\n    signOut,\n    GoogleAuthProvider,\n    signInWithPopup\n} from 'firebase/auth';\n\n\nconst AuthContext = createContext({\n    currentUser: null,\n    register: () => Promise,\n    login: () => Promise,\n    logout: () => Promise,\n})\nexport const useAuth = () => useContext(AuthContext)\nexport default function AuthContextProvider({children}){\n    const [currentUser, setCurrentUser] = useState(null)\n\n    useEffect(() => {\n        const unsubscribe = onAuthStateChanged(auth, user => {\n            setCurrentUser(user)\n        })\n        return () => {\n            unsubscribe()\n        }\n    }, [])\n\n    function register(email, password){\n        return createUserWithEmailAndPassword(auth, email, password)\n    }\n\n    function login(email, password) {\n        return signInWithEmailAndPassword(auth, email, password)\n    }\n\n    function logout(){\n        return signOut(auth)\n    }\n\n    function signInWithGoogle() {\n        const provider = new GoogleAuthProvider()\n        return signInWithPopup(auth, provider)\n    }\n    const value = {\n        currentUser,\n        register,\n        login,\n        logout,\n        signInWithGoogle,\n    }\n    return <AuthContext.Provider value = {value}>{children}</AuthContext.Provider>\n}\n"]},"metadata":{},"sourceType":"module"}