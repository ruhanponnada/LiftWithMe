{"ast":null,"code":"var _jsxFileName = \"/Users/ruhanponnada/Documents/liftwithme-client/src/pages/ResetPasswordPage.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { Button, chakra, FormControl, FormLabel, Heading, Input, Stack, useToast } from '@chakra-ui/react';\nimport React, { useState } from 'react';\nimport { Card } from '../components/Card';\nimport { Layout } from '../components/Layout';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction useQuery() {\n  _s();\n\n  return new URLSearchParams(useLocation().search);\n}\n\n_s(useQuery, \"EuD9q2dZ34PfN/QO2OBhBzeMxmY=\", false, function () {\n  return [useLocation];\n});\n\nexport default function ResetPasswordPage() {\n  _s2();\n\n  const {\n    resetPassword\n  } = useAuth();\n  const query = useQuery();\n  console.log(query.get('mode'));\n  console.log(query.get('oobCode'));\n  console.log(query.get('continueUrl'));\n  const toast = useToast();\n  const [newPassword, setNewPassword] = useState('');\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      textAlign: \"center\",\n      my: 12,\n      children: \"Reset password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      maxW: \"md\",\n      mx: \"auto\",\n      mt: 4,\n      children: /*#__PURE__*/_jsxDEV(chakra.form, {\n        onSubmit: async e => {\n          e.preventDefault();\n          resetPassword(query.get('oobCode'), newPassword).then(res => {\n            console.log(res);\n            toast({\n              description: 'Password changed, go to login now!',\n              status: 'success',\n              duration: 9000,\n              isClosable: true\n            });\n            history.push(query.get('continueUrl'));\n          }).catch(err => {\n            console.log(err.message);\n            toast({\n              description: error.message,\n              status: 'error',\n              duration: 9000,\n              isClosable: true\n            });\n          });\n        },\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          spacing: \"6\",\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            id: \"password\",\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"New password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              value: newPassword,\n              onChange: e => setNewPassword(e.target.value),\n              type: \"password\",\n              autoComplete: \"password\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            colorScheme: \"primary\",\n            size: \"lg\",\n            fontSize: \"md\",\n            children: \"Reset password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(ResetPasswordPage, \"yPD87WJUOun7hU8SMAxRDeGAdTQ=\", false, function () {\n  return [useAuth, useQuery, useToast];\n});\n\n_c = ResetPasswordPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResetPasswordPage\");","map":{"version":3,"sources":["/Users/ruhanponnada/Documents/liftwithme-client/src/pages/ResetPasswordPage.jsx"],"names":["Button","chakra","FormControl","FormLabel","Heading","Input","Stack","useToast","React","useState","Card","Layout","useHistory","useLocation","useAuth","useQuery","URLSearchParams","search","ResetPasswordPage","resetPassword","query","console","log","get","toast","newPassword","setNewPassword","e","preventDefault","then","res","description","status","duration","isClosable","history","push","catch","err","message","error","target","value"],"mappings":"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","sourcesContent":["import {\n  Button,\n  chakra,\n  FormControl,\n  FormLabel,\n  Heading,\n  Input,\n  Stack,\n  useToast,\n} from '@chakra-ui/react'\nimport React, { useState } from 'react'\nimport { Card } from '../components/Card'\nimport { Layout } from '../components/Layout'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport { useAuth } from '../contexts/AuthContext'\n\nfunction useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n\nexport default function ResetPasswordPage() {\n  const {resetPassword}= useAuth()\n  const query = useQuery()\n  console.log(query.get('mode'))\n  console.log(query.get('oobCode'))\n  console.log(query.get('continueUrl'))\n  const toast = useToast()\n\n  const [newPassword, setNewPassword]= useState('')\n\n  return (\n    <Layout>\n      <Heading textAlign='center' my={12}>\n        Reset password\n      </Heading>\n      <Card maxW='md' mx='auto' mt={4}>\n        <chakra.form\n          onSubmit={async e => {\n            e.preventDefault()\n            resetPassword(query.get('oobCode'), newPassword)\n              .then(res => {\n                console.log(res)\n                toast({\n                  description: 'Password changed, go to login now!',\n                  status: 'success',\n                  duration: 9000,\n                  isClosable: true\n                })\n                history.push(query.get('continueUrl'))\n              })\n              .catch(err => {\n                console.log(err.message)\n                toast({\n                  description: error.message,\n                  status: 'error',\n                  duration: 9000,\n                  isClosable: true\n                })\n              })\n          }}\n        >\n          <Stack spacing='6'>\n            <FormControl id='password'>\n              <FormLabel>New password</FormLabel>\n              <Input value={newPassword} onChange={e => setNewPassword(e.target.value)} type='password' autoComplete='password' required />\n            </FormControl>\n            <Button type='submit' colorScheme='primary' size='lg' fontSize='md'>\n              Reset password\n            </Button>\n          </Stack>\n        </chakra.form>\n      </Card>\n    </Layout>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}